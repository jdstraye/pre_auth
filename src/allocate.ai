"""
Split the source data into 75% training and 25% testing while keeping 
the proportions of data similar. Use stratified sampling to ensure 
proportionality.
e.g., if 10% of the testing are rejected, then 10% of training should 
also be rejected.
Columns in particular - final_contract_status and final_contract_tier
"""

from typing import Tuple
import pandas as pd
from pandas import DataFrame
from sklearn.model_selection import train_test_split
from pathlib import Path
import logging

logging.basicConfig(level=logging.DEBUG)
logger = logging.getLogger(__name__)

# Load your CSV file
input_path = Path("data/prefi_weaviate_clean-1_processed.csv")

df: DataFrame = pd.read_csv(input_path)
logger.info("Loaded dataset with %d rows and %d columns", df.shape[0], df.shape[1])

# Make sure the required columns exist
required_cols = ["final_contract_status", "final_contract_tier"]
for col in required_cols:
    if col not in df.columns:
        raise ValueError(f"Missing required column: {col}")

# Create stratification key by combining the two columns
df["stratify_key"] = df["final_contract_status"].astype(str) + "_" + df["final_contract_tier"].astype(str)

# Split train/test
train_df, test_df = train_test_split(
    df,
    test_size=0.25,
    stratify=df["stratify_key"],
    random_state=42,
)

# Drop the helper column
train_df = train_df.drop(columns=["stratify_key"])
test_df = test_df.drop(columns=["stratify_key"])

logger.info("Train size: %d, Test size: %d", len(train_df), len(test_df))
